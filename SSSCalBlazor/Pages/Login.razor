@page "/login"
@inject NavigationManager MyNavigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage

<h3>Login</h3>

<EditForm Model="user" OnSubmit="HandleLogin">
    <label for="username">Name</label>
    <InputText id="username" @bind-Value="user.Username" />
    <label for="password">Password</label>
    <InputText id="password" @bind-Value="user.Password" type="password" />
    <button type="submit" class="btn btn-primary">Do it!</button>
</EditForm>

@code {

    UserLoginDto user = new UserLoginDto();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var uriBuilder = new UriBuilder(MyNavigationManager.Uri);
            var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
            var idt=q["token"] ?? "";
            var rt = q["reftoken"] ?? "";
            var page = q["pg"] ?? "";
            await LocalStorage.SetItemAsStringAsync("idtoken", idt);
            await LocalStorage.SetItemAsStringAsync("reftoken", rt);

            await AuthStateProvider.GetAuthenticationStateAsync();
            MyNavigationManager.NavigateTo($"/{page}");
        }
    }

    async Task HandleLogin()
    {
        //var result = await Http.PostAsJsonAsync("https://www.schuebelsoftware.com/sso/api/login?ssoReturn=https://www.schuebelsoftware.com/ssscalcore/sso/", user);
        //var result = await Http.PostAsJsonAsync("https://www.schuebelsoftware.com/sso/api/login?ssoReturn=https://localhost:5001/login", user);
        var result = await Http.PostAsJsonAsync("https://www.schuebelsoftware.com/sso/api/login?ssoReturn=https://www.schuebelsoftware.com/login", user);
        var token = await result.Content.ReadAsStringAsync();
        // Console.WriteLine(token);
        // await LocalStorage.SetItemAsync("token", token);
        // await AuthStateProvider.GetAuthenticationStateAsync();
    }
}